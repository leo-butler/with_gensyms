/* -*- Mode: maxima; Package: MAXIMA -*- */
/*
 * $Id:$
 *
 * Author: Leo Butler (l_butler@users.sourcerforge.net)
 *
 * This file is Maxima code (http://maxima.sourceforge.net/)
 * 
 * It is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or (at your
 * option) any later version.
 * 
 * This software is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public
 * License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this file. If not, see http://www.gnu.org/licenses/. 
 */

(load("with_gensyms.mac"), 'done) $
done $

maxima_symbolp(a);
false $

maxima_symbolp(b);
false $

maxima_symbolp(n);
false $

maxima_symbolp(true);
true $

maxima_symbolp(false);
true $

maxima_symbolp(lambda);
true $

maxima_symbolp(block);
true $

maxima_symbolp(?great);
true $

maxima_symbolp(?x);
false $

with_gensyms([x:1,y:'b],
  x+y);
1+'b $

with_gensyms([c:makelist(i,i,1,4)],
  length(c));
4 $

with_gensyms([a:'a],a);
a $

with_gensyms([a,b,c],
  a:1, b:2,
  with_gensyms([a:a,b:b,c],
    a+b));
3 $

(wg_redefun(g(x) := x), g(x));
'x$

(f(x) :> 0*x, simp:false, atom(last(fundef(f))));
false;

simp:true;
true;

kill(myf,g,f);
done $

/* check idempotency */
block([g,h,partition_bag],
  local(partition_bag),
  g : partition_bag(L,p) :> block([t:[],f:[]], if listp(L) then (map(lambda([x], apply('push,[x, if p(x)=true then 't else 'f])), L), map(reverse,[t,f])) else if not(atom(L)) then partition_bag(flatten(subst([matrix="[","{"="["],args(L))),p)),
  h : subst([":="=":>"],g), h : ev(h,nouns),
  is(h = g));
true $

length(wg_listofvars(fundef(wg_listofvars)));
4;

wg_listofvars([a,b,c,%pi,block,x]);
[a,b,c,x];

length(wg_funargs(wg_listofvars));
2;

length(wg_funargs(first(fundef(wg_listofvars))));
2;

/* declared constants are discarded by wg_listofvars, but included by wg_funargs
   system constants like %pi are discarded because they are in $symbols */
block([a,b,f], local(a,f), declare(a,constant),
  [wg_listofvars([a,b,f,%e]), wg_funargs(f(a,b,%pi))]);
[[b,f],[a,b]];

map(maxima_symbolp,[%e,quit,constant,maxima_symbolp]);
[true,true,true,false];

(add_maxima_symbol(maxima_symbolp), map(maxima_symbolp,[%e,quit,constant,maxima_symbolp]));
[true,true,true,true];

remove_maxima_symbols([%e,quit,constant,maxima_symbolp]);
[];

(delete_maxima_symbols(maxima_symbolp), map(maxima_symbolp,[%e,quit,constant,maxima_symbolp]));
[true,true,true,false];

remove_maxima_symbols([%e,quit,constant,maxima_symbolp]);
[maxima_symbolp];

/* end of rtest_with_gensyms.mac */
